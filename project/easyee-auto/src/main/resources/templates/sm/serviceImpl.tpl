package ${pkgName}.service.impl;

import java.util.List;
import java.io.Serializable;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import ${pkgName}.criteria.${ClassName}Criteria;
import ${pkgName}.entity.${ClassName};
import ${pkgName}.dao.${ClassName}DAO;
import ${pkgName}.service.${ClassName}Service;
import ${baseServiceImport};
import ${pageBeanImport};

/**
 * ${ClassName} Service, generated by EasyAuto
 * Must extends BaseService
 * 
 * @author easyproject.cn
 * @version 1.0
 *
 * 
 */
@Service("${ClassName?uncap_first}Service")
public class ${ClassName}ServiceImpl extends BaseService implements ${ClassName}Service {

		
	@Resource
	${ClassName}DAO ${ClassName?uncap_first}DAO;

	@Override
	public void save(${ClassName} ${ClassName?uncap_first}) {
		${ClassName?uncap_first}DAO.save(${ClassName?uncap_first});
	}

	@Override
	public void delete(Serializable id) {
		${ClassName?uncap_first}DAO.delete(id);
	}
<#if Oid??>
	@Override
	public void delete(String[] values) {
		${ClassName?uncap_first}DAO.deleteByIds(values);
	}
</#if>
	
	@Override
	public void update(${ClassName} o) {
		${ClassName?uncap_first}DAO.update(o);
	}

	@Override
	public ${ClassName} get(Serializable id) {
		return ${ClassName?uncap_first}DAO.get(id);
	}

	@Override
	@SuppressWarnings("rawtypes")
	public void findByPage(PageBean pageBean, ${ClassName}Criteria ${ClassName?uncap_first}Criteria) {
		pageBean.setFrom(" ${table} ");
		pageBean.setSelect("*");
		pageBean.setEasyCriteria(${ClassName?uncap_first}Criteria);
		
		// pagination
		${ClassName?uncap_first}DAO.pagination(pageBean);
	}

	@Override
	public int findMaxRow() {
		return ${ClassName?uncap_first}DAO.findMaxRow();
	}
	
	@Override
	public int findMaxPage(int rowPerPage) {
		return (${ClassName?uncap_first}DAO.findMaxRow()-1)/rowPerPage+1;
	}

	@Override
	@SuppressWarnings("unchecked")
	public List<${ClassName}> findAll(){
		return ${ClassName?uncap_first}DAO.findAll();
	}

}
